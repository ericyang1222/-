#define NOTE_C4  262 //低音Do
#define NOTE_D4  294 //低音Re
#define NOTE_E4  330 //低音Mi
#define NOTE_F4  349 //低音Fa
#define NOTE_G4  392 //低音So
#define NOTE_A4  440 //低音La
#define NOTE_B4  494 //低音Si

#define NOTE_C5  523 //中音Do
#define NOTE_D5  587 //中音Re
#define NOTE_E5  659 //中音Mi
#define NOTE_F5  698 //中音Fa
#define NOTE_G5  784 //中音So
#define NOTE_A5  880 //中音La
#define NOTE_B5  988 //中音Si

#define NOTE_C6  1046 //高音Do
#define NOTE_D6  1175 //高音Re
#define NOTE_E6  1318 //高音Mi
#define NOTE_F6  1397 //高音Fa
#define NOTE_G6  1568 //高音So
#define NOTE_A6  1760 //高音La
#define NOTE_B6  1976 //高音Si

// 定義七段顯示器的腳位
// 這裡需要根據你的七段顯示器和連接方式來調整
#define SEG_A 2
#define SEG_B 3
#define SEG_C 4
#define SEG_D 5
#define SEG_E 6
#define SEG_F 7
#define SEG_G 8
#define SEG_DP 9 

int photoresistor = A0; // 光敏電阻接在A0
int buzzer = 10; // 蜂鳴器接在10腳位

void setup() {
  pinMode(buzzer, OUTPUT);
  // 設置七段顯示器的每個段落為輸出
  pinMode(SEG_A, OUTPUT);
  pinMode(SEG_B, OUTPUT);
  pinMode(SEG_C, OUTPUT);
  pinMode(SEG_D, OUTPUT);
  pinMode(SEG_E, OUTPUT);
  pinMode(SEG_F, OUTPUT);
  pinMode(SEG_G, OUTPUT);
  pinMode(SEG_DP, OUTPUT);
  Serial.begin(9600);
}

void displayNumber(int number) {
  


digitalWrite(SEG_A, LOW);
digitalWrite(SEG_B, LOW);
digitalWrite(SEG_C, LOW);
digitalWrite(SEG_D, LOW);
digitalWrite(SEG_E, LOW);
digitalWrite(SEG_F, LOW);
digitalWrite(SEG_G, LOW);


switch (number) {
case 0:
digitalWrite(SEG_A, HIGH);
digitalWrite(SEG_B, HIGH);
digitalWrite(SEG_C, HIGH);
digitalWrite(SEG_D, HIGH);
digitalWrite(SEG_E, HIGH);
digitalWrite(SEG_F, HIGH);
break;
case 1:
digitalWrite(SEG_B, HIGH);
digitalWrite(SEG_C, HIGH);
break;
// 添加其他数字的代码...
case 9:
digitalWrite(SEG_A, HIGH);
digitalWrite(SEG_B, HIGH);
digitalWrite(SEG_C, HIGH);
digitalWrite(SEG_D, HIGH);
digitalWrite(SEG_F, HIGH);
digitalWrite(SEG_G, HIGH);
break;
}
}

void loop() {
int sensorValue = analogRead(photoresistor); // 抓光敏電阻的值
int noteDuration = 500; // 發出聲音的時間

// 光敏電阻數值對應音高
int noteIndex = map(sensorValue, 0, 1023, 0, 6);


int frequency = 0;
int displayNum = 0;

if (noteIndex <= 2) { // 低音DO到低音LA
frequency = NOTE_C4 + (noteIndex * 32);
displayNum = noteIndex / 2;
} 
else if (noteIndex <= 5) { // 中音DO到中音SI
frequency = NOTE_C5 + ((noteIndex - 3) * 64);
displayNum = 3 + (noteIndex - 3) / 2;
} 
else if (noteIndex == 6) { // 高音DO
frequency = NOTE_C6;
displayNum = 7;
} // 添加更多的映射关系，根据实际情况调整

tone(buzzer, frequency, noteDuration); // 播放音符
displayNumber(displayNum); // 显示对应的数字

delay(noteDuration); // 等待音符播放完毕
noTone(buzzer); // 停止音符

delay(500); // 暂停一会儿再播放下一个音符
}
